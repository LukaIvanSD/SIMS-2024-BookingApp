<Application x:Class="BookingApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookingApp"
             StartupUri="WPF/Views/SplashScreen.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ToastNotifications.Messages;component/Themes/Default.xaml" />
                <ResourceDictionary Source="Themes/LightTheme.xaml"/>
                <ResourceDictionary Source="Languages/English.xaml"/>
                <ResourceDictionary Source="BuiltWpfElements/LanguageSwitch.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="PrimaryColor" Color="#2FC8BF" />
            <SolidColorBrush x:Key="SecondaryColor" Color="#a8eae7" />
            <SolidColorBrush x:Key="ThirdColor" Color="#F1FEFD" />
            <SolidColorBrush x:Key="WhiteWhite" Color="#FBFCFD" />
            <SolidColorBrush x:Key="PrimaryColor2" Color="#218C89" /> <!--#1F807C-->
            <SolidColorBrush x:Key="PrimaryBlack" Color="#424242" />
            <SolidColorBrush x:Key="PrimaryBlack2" Color="#838383" />
            <SolidColorBrush x:Key="PrimaryBlack3" Color="#C8C8C8" />
            <SolidColorBrush x:Key="WhiteGrey" Color="#EEEEEE" />
            <SolidColorBrush x:Key="LightGray" Color="#F0F3F3" />
            <SolidColorBrush x:Key="Validation" Color="#EB4034" />
            <FontFamily x:Key="CustomFont">/Resources/Fonts/#Open Sans</FontFamily>
            <Style TargetType="Label">
                <Setter Property="FontFamily" Value="{StaticResource CustomFont}" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="FontFamily" Value="{StaticResource CustomFont}" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource CustomFont}" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="FontFamily" Value="{StaticResource CustomFont}" />
            </Style>
            
            
            
            
            <Style TargetType="Border" x:Key="BorderHover">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryColor2}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border" x:Key="BorderHoverUltimate">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource PrimaryBlack3}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True"/>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource PrimaryColor2}"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>



            <Style TargetType="Grid" x:Key="GridHover">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryColor2}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <Style TargetType="Button" x:Key="ButtonHover">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryColor2}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource PrimaryBlack2}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <ControlTemplate x:Key="CustomButtonTemplate" TargetType="Button">
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </ControlTemplate>

            <Style TargetType="{x:Type ListBoxItem}" x:Key="CustomListView">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter HorizontalAlignment="Left" Margin="2,3,2,3" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Border" x:Key="BorderHoverAnimation">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                             To="1.02" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             To="1.03" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                             To="1" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Storyboard x:Key="BlinkAnimation">
                <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="1" To="0.4" Duration="0:0:1.5"
                AutoReverse="True" RepeatBehavior="3x"/>
            </Storyboard>



            <Storyboard x:Key="BellAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:4.0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:4.5" Value="10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5.0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5.5" Value="0"/>

                </DoubleAnimationUsingKeyFrames>
            </Storyboard>


            <Style TargetType="Border" x:Key="NewBorderHoverAnimation">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                             To="1.22" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             To="1.23" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                             To="1" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
